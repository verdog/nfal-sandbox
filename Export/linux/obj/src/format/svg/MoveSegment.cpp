// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_format_svg_MoveSegment
#include <format/svg/MoveSegment.h>
#endif
#ifndef INCLUDED_format_svg_PathSegment
#include <format/svg/PathSegment.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a51731e833c84c76_43_new,"format.svg.MoveSegment","new",0xde0a69b3,"format.svg.MoveSegment.new","format/svg/PathSegment.hx",43,0x6d7bc4b3)
HX_LOCAL_STACK_FRAME(_hx_pos_a51731e833c84c76_44_getType,"format.svg.MoveSegment","getType",0x2944e143,"format.svg.MoveSegment.getType","format/svg/PathSegment.hx",44,0x6d7bc4b3)
namespace format{
namespace svg{

void MoveSegment_obj::__construct(Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_a51731e833c84c76_43_new)
HXDLIN(  43)		super::__construct(inX,inY);
            	}

Dynamic MoveSegment_obj::__CreateEmpty() { return new MoveSegment_obj; }

void *MoveSegment_obj::_hx_vtable = 0;

Dynamic MoveSegment_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MoveSegment_obj > _hx_result = new MoveSegment_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool MoveSegment_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x72d55b55) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x72d55b55;
	} else {
		return inClassId==(int)0x77129341;
	}
}

int MoveSegment_obj::getType(){
            	HX_STACKFRAME(&_hx_pos_a51731e833c84c76_44_getType)
HXDLIN(  44)		return 1;
            	}



::hx::ObjectPtr< MoveSegment_obj > MoveSegment_obj::__new(Float inX,Float inY) {
	::hx::ObjectPtr< MoveSegment_obj > __this = new MoveSegment_obj();
	__this->__construct(inX,inY);
	return __this;
}

::hx::ObjectPtr< MoveSegment_obj > MoveSegment_obj::__alloc(::hx::Ctx *_hx_ctx,Float inX,Float inY) {
	MoveSegment_obj *__this = (MoveSegment_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MoveSegment_obj), false, "format.svg.MoveSegment"));
	*(void **)__this = MoveSegment_obj::_hx_vtable;
	__this->__construct(inX,inY);
	return __this;
}

MoveSegment_obj::MoveSegment_obj()
{
}

::hx::Val MoveSegment_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getType") ) { return ::hx::Val( getType_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *MoveSegment_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *MoveSegment_obj_sStaticStorageInfo = 0;
#endif

static ::String MoveSegment_obj_sMemberFields[] = {
	HX_("getType",70,a2,8b,1f),
	::String(null()) };

::hx::Class MoveSegment_obj::__mClass;

void MoveSegment_obj::__register()
{
	MoveSegment_obj _hx_dummy;
	MoveSegment_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("format.svg.MoveSegment",41,14,29,86);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MoveSegment_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MoveSegment_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MoveSegment_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MoveSegment_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace format
} // end namespace svg
