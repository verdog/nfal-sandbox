// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_format_gfx_Gradient
#include <format/gfx/Gradient.h>
#endif
#ifndef INCLUDED_format_svg_FillType
#include <format/svg/FillType.h>
#endif
#ifndef INCLUDED_format_svg_Grad
#include <format/svg/Grad.h>
#endif
namespace format{
namespace svg{

::format::svg::FillType FillType_obj::FillGrad( ::format::svg::Grad grad)
{
	return ::hx::CreateEnum< FillType_obj >(HX_("FillGrad",11,84,2f,3f),0,1)->_hx_init(0,grad);
}

::format::svg::FillType FillType_obj::FillNone;

::format::svg::FillType FillType_obj::FillSolid(int colour)
{
	return ::hx::CreateEnum< FillType_obj >(HX_("FillSolid",88,ba,3f,f1),1,1)->_hx_init(0,colour);
}

bool FillType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("FillGrad",11,84,2f,3f)) { outValue = FillType_obj::FillGrad_dyn(); return true; }
	if (inName==HX_("FillNone",fb,c6,cd,43)) { outValue = FillType_obj::FillNone; return true; }
	if (inName==HX_("FillSolid",88,ba,3f,f1)) { outValue = FillType_obj::FillSolid_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FillType_obj)

int FillType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("FillGrad",11,84,2f,3f)) return 0;
	if (inName==HX_("FillNone",fb,c6,cd,43)) return 2;
	if (inName==HX_("FillSolid",88,ba,3f,f1)) return 1;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(FillType_obj,FillGrad,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(FillType_obj,FillSolid,return)

int FillType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("FillGrad",11,84,2f,3f)) return 1;
	if (inName==HX_("FillNone",fb,c6,cd,43)) return 0;
	if (inName==HX_("FillSolid",88,ba,3f,f1)) return 1;
	return super::__FindArgCount(inName);
}

::hx::Val FillType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("FillGrad",11,84,2f,3f)) return FillGrad_dyn();
	if (inName==HX_("FillNone",fb,c6,cd,43)) return FillNone;
	if (inName==HX_("FillSolid",88,ba,3f,f1)) return FillSolid_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String FillType_obj_sStaticFields[] = {
	HX_("FillGrad",11,84,2f,3f),
	HX_("FillSolid",88,ba,3f,f1),
	HX_("FillNone",fb,c6,cd,43),
	::String(null())
};

::hx::Class FillType_obj::__mClass;

Dynamic __Create_FillType_obj() { return new FillType_obj; }

void FillType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("format.svg.FillType",de,f5,be,cb), ::hx::TCanCast< FillType_obj >,FillType_obj_sStaticFields,0,
	&__Create_FillType_obj, &__Create,
	&super::__SGetClass(), &CreateFillType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FillType_obj::__GetStatic;
}

void FillType_obj::__boot()
{
FillNone = ::hx::CreateConstEnum< FillType_obj >(HX_("FillNone",fb,c6,cd,43),2);
}


} // end namespace format
} // end namespace svg
