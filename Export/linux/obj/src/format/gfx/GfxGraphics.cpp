// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_format_gfx_Gfx
#include <format/gfx/Gfx.h>
#endif
#ifndef INCLUDED_format_gfx_GfxGraphics
#include <format/gfx/GfxGraphics.h>
#endif
#ifndef INCLUDED_format_gfx_Gradient
#include <format/gfx/Gradient.h>
#endif
#ifndef INCLUDED_format_gfx_LineStyle
#include <format/gfx/LineStyle.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_68780269e164ebdc_18_new,"format.gfx.GfxGraphics","new",0x41bbd28a,"format.gfx.GfxGraphics.new","format/gfx/GfxGraphics.hx",18,0xfe340028)
HX_LOCAL_STACK_FRAME(_hx_pos_68780269e164ebdc_25_beginGradientFill,"format.gfx.GfxGraphics","beginGradientFill",0x7df2f406,"format.gfx.GfxGraphics.beginGradientFill","format/gfx/GfxGraphics.hx",25,0xfe340028)
HX_LOCAL_STACK_FRAME(_hx_pos_68780269e164ebdc_28_beginFill,"format.gfx.GfxGraphics","beginFill",0xc970aaf6,"format.gfx.GfxGraphics.beginFill","format/gfx/GfxGraphics.hx",28,0xfe340028)
HX_LOCAL_STACK_FRAME(_hx_pos_68780269e164ebdc_29_endFill,"format.gfx.GfxGraphics","endFill",0x3745e728,"format.gfx.GfxGraphics.endFill","format/gfx/GfxGraphics.hx",29,0xfe340028)
HX_LOCAL_STACK_FRAME(_hx_pos_68780269e164ebdc_33_lineStyle,"format.gfx.GfxGraphics","lineStyle",0x07f3a647,"format.gfx.GfxGraphics.lineStyle","format/gfx/GfxGraphics.hx",33,0xfe340028)
HX_LOCAL_STACK_FRAME(_hx_pos_68780269e164ebdc_35_endLineStyle,"format.gfx.GfxGraphics","endLineStyle",0x4cda19d8,"format.gfx.GfxGraphics.endLineStyle","format/gfx/GfxGraphics.hx",35,0xfe340028)
HX_LOCAL_STACK_FRAME(_hx_pos_68780269e164ebdc_37_moveTo,"format.gfx.GfxGraphics","moveTo",0xca750702,"format.gfx.GfxGraphics.moveTo","format/gfx/GfxGraphics.hx",37,0xfe340028)
HX_LOCAL_STACK_FRAME(_hx_pos_68780269e164ebdc_38_lineTo,"format.gfx.GfxGraphics","lineTo",0xea687aa5,"format.gfx.GfxGraphics.lineTo","format/gfx/GfxGraphics.hx",38,0xfe340028)
HX_LOCAL_STACK_FRAME(_hx_pos_68780269e164ebdc_40_curveTo,"format.gfx.GfxGraphics","curveTo",0xdfedbf34,"format.gfx.GfxGraphics.curveTo","format/gfx/GfxGraphics.hx",40,0xfe340028)
namespace format{
namespace gfx{

void GfxGraphics_obj::__construct( ::openfl::display::Graphics inGraphics){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_18_new)
HXLINE(  19)		super::__construct();
HXLINE(  20)		this->graphics = inGraphics;
            	}

Dynamic GfxGraphics_obj::__CreateEmpty() { return new GfxGraphics_obj; }

void *GfxGraphics_obj::_hx_vtable = 0;

Dynamic GfxGraphics_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GfxGraphics_obj > _hx_result = new GfxGraphics_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool GfxGraphics_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x79a02eff) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x79a02eff;
	} else {
		return inClassId==(int)0x7f7cc9e2;
	}
}

void GfxGraphics_obj::beginGradientFill( ::format::gfx::Gradient grad){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_25_beginGradientFill)
HXDLIN(  25)		this->graphics->beginGradientFill(grad->type,grad->colors,grad->alphas,grad->ratios,grad->matrix,grad->spread,grad->interp,grad->focus);
            	}


void GfxGraphics_obj::beginFill(int color,Float alpha){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_28_beginFill)
HXDLIN(  28)		this->graphics->beginFill(color,alpha);
            	}


void GfxGraphics_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_29_endFill)
HXDLIN(  29)		this->graphics->endFill();
            	}


void GfxGraphics_obj::lineStyle( ::format::gfx::LineStyle style){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_33_lineStyle)
HXDLIN(  33)		this->graphics->lineStyle(style->thickness,style->color,style->alpha,style->pixelHinting,style->scaleMode,style->capsStyle,style->jointStyle,style->miterLimit);
            	}


void GfxGraphics_obj::endLineStyle(){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_35_endLineStyle)
HXDLIN(  35)		this->graphics->lineStyle(null(),null(),null(),null(),null(),null(),null(),null());
            	}


void GfxGraphics_obj::moveTo(Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_37_moveTo)
HXDLIN(  37)		this->graphics->moveTo(inX,inY);
            	}


void GfxGraphics_obj::lineTo(Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_38_lineTo)
HXDLIN(  38)		this->graphics->lineTo(inX,inY);
            	}


void GfxGraphics_obj::curveTo(Float inCX,Float inCY,Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_68780269e164ebdc_40_curveTo)
HXDLIN(  40)		this->graphics->curveTo(inCX,inCY,inX,inY);
            	}



::hx::ObjectPtr< GfxGraphics_obj > GfxGraphics_obj::__new( ::openfl::display::Graphics inGraphics) {
	::hx::ObjectPtr< GfxGraphics_obj > __this = new GfxGraphics_obj();
	__this->__construct(inGraphics);
	return __this;
}

::hx::ObjectPtr< GfxGraphics_obj > GfxGraphics_obj::__alloc(::hx::Ctx *_hx_ctx, ::openfl::display::Graphics inGraphics) {
	GfxGraphics_obj *__this = (GfxGraphics_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GfxGraphics_obj), true, "format.gfx.GfxGraphics"));
	*(void **)__this = GfxGraphics_obj::_hx_vtable;
	__this->__construct(inGraphics);
	return __this;
}

GfxGraphics_obj::GfxGraphics_obj()
{
}

void GfxGraphics_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GfxGraphics);
	HX_MARK_MEMBER_NAME(graphics,"graphics");
	HX_MARK_END_CLASS();
}

void GfxGraphics_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(graphics,"graphics");
}

::hx::Val GfxGraphics_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"moveTo") ) { return ::hx::Val( moveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineTo") ) { return ::hx::Val( lineTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"endFill") ) { return ::hx::Val( endFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"curveTo") ) { return ::hx::Val( curveTo_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { return ::hx::Val( graphics ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"beginFill") ) { return ::hx::Val( beginFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineStyle") ) { return ::hx::Val( lineStyle_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"endLineStyle") ) { return ::hx::Val( endLineStyle_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"beginGradientFill") ) { return ::hx::Val( beginGradientFill_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val GfxGraphics_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { graphics=inValue.Cast<  ::openfl::display::Graphics >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GfxGraphics_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("graphics",cb,f8,67,12));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GfxGraphics_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::display::Graphics */ ,(int)offsetof(GfxGraphics_obj,graphics),HX_("graphics",cb,f8,67,12)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GfxGraphics_obj_sStaticStorageInfo = 0;
#endif

static ::String GfxGraphics_obj_sMemberFields[] = {
	HX_("graphics",cb,f8,67,12),
	HX_("beginGradientFill",5c,3c,03,2e),
	HX_("beginFill",4c,ad,95,8c),
	HX_("endFill",fe,87,e0,25),
	HX_("lineStyle",9d,a8,18,cb),
	HX_("endLineStyle",42,b1,1a,da),
	HX_("moveTo",ec,d2,ac,cc),
	HX_("lineTo",8f,46,a0,ec),
	HX_("curveTo",0a,60,88,ce),
	::String(null()) };

::hx::Class GfxGraphics_obj::__mClass;

void GfxGraphics_obj::__register()
{
	GfxGraphics_obj _hx_dummy;
	GfxGraphics_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("format.gfx.GfxGraphics",98,85,71,c6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GfxGraphics_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GfxGraphics_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GfxGraphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GfxGraphics_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace format
} // end namespace gfx
