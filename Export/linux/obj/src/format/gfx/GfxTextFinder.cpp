// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_format_gfx_Gfx
#include <format/gfx/Gfx.h>
#endif
#ifndef INCLUDED_format_gfx_GfxTextFinder
#include <format/gfx/GfxTextFinder.h>
#endif
#ifndef INCLUDED_format_svg_Text
#include <format/svg/Text.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d80c36edbd57e995_9_new,"format.gfx.GfxTextFinder","new",0xec4f6472,"format.gfx.GfxTextFinder.new","format/gfx/GfxTextFinder.hx",9,0x33f5a7c0)
HX_LOCAL_STACK_FRAME(_hx_pos_d80c36edbd57e995_11_geometryOnly,"format.gfx.GfxTextFinder","geometryOnly",0x295f4eec,"format.gfx.GfxTextFinder.geometryOnly","format/gfx/GfxTextFinder.hx",11,0x33f5a7c0)
HX_LOCAL_STACK_FRAME(_hx_pos_d80c36edbd57e995_12_renderText,"format.gfx.GfxTextFinder","renderText",0x72eeb951,"format.gfx.GfxTextFinder.renderText","format/gfx/GfxTextFinder.hx",12,0x33f5a7c0)
namespace format{
namespace gfx{

void GfxTextFinder_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d80c36edbd57e995_9_new)
HXDLIN(   9)		super::__construct();
            	}

Dynamic GfxTextFinder_obj::__CreateEmpty() { return new GfxTextFinder_obj; }

void *GfxTextFinder_obj::_hx_vtable = 0;

Dynamic GfxTextFinder_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GfxTextFinder_obj > _hx_result = new GfxTextFinder_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GfxTextFinder_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x36286e4a) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x36286e4a;
	} else {
		return inClassId==(int)0x79a02eff;
	}
}

bool GfxTextFinder_obj::geometryOnly(){
            	HX_STACKFRAME(&_hx_pos_d80c36edbd57e995_11_geometryOnly)
HXDLIN(  11)		return true;
            	}


void GfxTextFinder_obj::renderText( ::format::svg::Text inText){
            	HX_STACKFRAME(&_hx_pos_d80c36edbd57e995_12_renderText)
HXDLIN(  12)		if (::hx::IsNull( this->text )) {
HXDLIN(  12)			this->text = inText;
            		}
            	}



::hx::ObjectPtr< GfxTextFinder_obj > GfxTextFinder_obj::__new() {
	::hx::ObjectPtr< GfxTextFinder_obj > __this = new GfxTextFinder_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< GfxTextFinder_obj > GfxTextFinder_obj::__alloc(::hx::Ctx *_hx_ctx) {
	GfxTextFinder_obj *__this = (GfxTextFinder_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GfxTextFinder_obj), true, "format.gfx.GfxTextFinder"));
	*(void **)__this = GfxTextFinder_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

GfxTextFinder_obj::GfxTextFinder_obj()
{
}

void GfxTextFinder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GfxTextFinder);
	HX_MARK_MEMBER_NAME(text,"text");
	HX_MARK_END_CLASS();
}

void GfxTextFinder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(text,"text");
}

::hx::Val GfxTextFinder_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"renderText") ) { return ::hx::Val( renderText_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"geometryOnly") ) { return ::hx::Val( geometryOnly_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val GfxTextFinder_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast<  ::format::svg::Text >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GfxTextFinder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("text",ad,cc,f9,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GfxTextFinder_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::format::svg::Text */ ,(int)offsetof(GfxTextFinder_obj,text),HX_("text",ad,cc,f9,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GfxTextFinder_obj_sStaticStorageInfo = 0;
#endif

static ::String GfxTextFinder_obj_sMemberFields[] = {
	HX_("text",ad,cc,f9,4c),
	HX_("geometryOnly",3e,f5,30,5a),
	HX_("renderText",23,c7,03,ea),
	::String(null()) };

::hx::Class GfxTextFinder_obj::__mClass;

void GfxTextFinder_obj::__register()
{
	GfxTextFinder_obj _hx_dummy;
	GfxTextFinder_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("format.gfx.GfxTextFinder",80,03,8c,b0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GfxTextFinder_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GfxTextFinder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GfxTextFinder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GfxTextFinder_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace format
} // end namespace gfx
