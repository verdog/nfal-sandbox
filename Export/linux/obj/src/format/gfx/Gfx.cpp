// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_format_gfx_Gfx
#include <format/gfx/Gfx.h>
#endif
#ifndef INCLUDED_format_gfx_Gradient
#include <format/gfx/Gradient.h>
#endif
#ifndef INCLUDED_format_gfx_LineStyle
#include <format/gfx/LineStyle.h>
#endif
#ifndef INCLUDED_format_svg_Text
#include <format/svg/Text.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_620fd4d4c36fad07_15_new,"format.gfx.Gfx","new",0x9478571f,"format.gfx.Gfx.new","format/gfx/Gfx.hx",15,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_16_geometryOnly,"format.gfx.Gfx","geometryOnly",0x93db1e9f,"format.gfx.Gfx.geometryOnly","format/gfx/Gfx.hx",16,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_17_size,"format.gfx.Gfx","size",0x58250122,"format.gfx.Gfx.size","format/gfx/Gfx.hx",17,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_18_beginGradientFill,"format.gfx.Gfx","beginGradientFill",0x1682735b,"format.gfx.Gfx.beginGradientFill","format/gfx/Gfx.hx",18,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_20_beginFill,"format.gfx.Gfx","beginFill",0x16664d4b,"format.gfx.Gfx.beginFill","format/gfx/Gfx.hx",20,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_21_endFill,"format.gfx.Gfx","endFill",0x4748da3d,"format.gfx.Gfx.endFill","format/gfx/Gfx.hx",21,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_23_lineStyle,"format.gfx.Gfx","lineStyle",0x54e9489c,"format.gfx.Gfx.lineStyle","format/gfx/Gfx.hx",23,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_24_endLineStyle,"format.gfx.Gfx","endLineStyle",0x13c4daa3,"format.gfx.Gfx.endLineStyle","format/gfx/Gfx.hx",24,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_26_moveTo,"format.gfx.Gfx","moveTo",0x77dfcd8d,"format.gfx.Gfx.moveTo","format/gfx/Gfx.hx",26,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_27_lineTo,"format.gfx.Gfx","lineTo",0x97d34130,"format.gfx.Gfx.lineTo","format/gfx/Gfx.hx",27,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_28_curveTo,"format.gfx.Gfx","curveTo",0xeff0b249,"format.gfx.Gfx.curveTo","format/gfx/Gfx.hx",28,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_30_renderText,"format.gfx.Gfx","renderText",0xf6bf2644,"format.gfx.Gfx.renderText","format/gfx/Gfx.hx",30,0xf24b1333)
HX_LOCAL_STACK_FRAME(_hx_pos_620fd4d4c36fad07_32_eof,"format.gfx.Gfx","eof",0x94718b7b,"format.gfx.Gfx.eof","format/gfx/Gfx.hx",32,0xf24b1333)
namespace format{
namespace gfx{

void Gfx_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_15_new)
            	}

Dynamic Gfx_obj::__CreateEmpty() { return new Gfx_obj; }

void *Gfx_obj::_hx_vtable = 0;

Dynamic Gfx_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Gfx_obj > _hx_result = new Gfx_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Gfx_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x79a02eff;
}

bool Gfx_obj::geometryOnly(){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_16_geometryOnly)
HXDLIN(  16)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Gfx_obj,geometryOnly,return )

void Gfx_obj::size(Float inWidth,Float inHeight){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_17_size)
            	}


HX_DEFINE_DYNAMIC_FUNC2(Gfx_obj,size,(void))

void Gfx_obj::beginGradientFill( ::format::gfx::Gradient grad){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_18_beginGradientFill)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Gfx_obj,beginGradientFill,(void))

void Gfx_obj::beginFill(int color,Float alpha){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_20_beginFill)
            	}


HX_DEFINE_DYNAMIC_FUNC2(Gfx_obj,beginFill,(void))

void Gfx_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_21_endFill)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Gfx_obj,endFill,(void))

void Gfx_obj::lineStyle( ::format::gfx::LineStyle style){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_23_lineStyle)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Gfx_obj,lineStyle,(void))

void Gfx_obj::endLineStyle(){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_24_endLineStyle)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Gfx_obj,endLineStyle,(void))

void Gfx_obj::moveTo(Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_26_moveTo)
            	}


HX_DEFINE_DYNAMIC_FUNC2(Gfx_obj,moveTo,(void))

void Gfx_obj::lineTo(Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_27_lineTo)
            	}


HX_DEFINE_DYNAMIC_FUNC2(Gfx_obj,lineTo,(void))

void Gfx_obj::curveTo(Float inCX,Float inCY,Float inX,Float inY){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_28_curveTo)
            	}


HX_DEFINE_DYNAMIC_FUNC4(Gfx_obj,curveTo,(void))

void Gfx_obj::renderText( ::format::svg::Text text){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_30_renderText)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Gfx_obj,renderText,(void))

void Gfx_obj::eof(){
            	HX_STACKFRAME(&_hx_pos_620fd4d4c36fad07_32_eof)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Gfx_obj,eof,(void))


::hx::ObjectPtr< Gfx_obj > Gfx_obj::__new() {
	::hx::ObjectPtr< Gfx_obj > __this = new Gfx_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Gfx_obj > Gfx_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Gfx_obj *__this = (Gfx_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Gfx_obj), false, "format.gfx.Gfx"));
	*(void **)__this = Gfx_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Gfx_obj::Gfx_obj()
{
}

::hx::Val Gfx_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"eof") ) { return ::hx::Val( eof_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"size") ) { return ::hx::Val( size_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"moveTo") ) { return ::hx::Val( moveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineTo") ) { return ::hx::Val( lineTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"endFill") ) { return ::hx::Val( endFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"curveTo") ) { return ::hx::Val( curveTo_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"beginFill") ) { return ::hx::Val( beginFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineStyle") ) { return ::hx::Val( lineStyle_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"renderText") ) { return ::hx::Val( renderText_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"geometryOnly") ) { return ::hx::Val( geometryOnly_dyn() ); }
		if (HX_FIELD_EQ(inName,"endLineStyle") ) { return ::hx::Val( endLineStyle_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"beginGradientFill") ) { return ::hx::Val( beginGradientFill_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Gfx_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Gfx_obj_sStaticStorageInfo = 0;
#endif

static ::String Gfx_obj_sMemberFields[] = {
	HX_("geometryOnly",3e,f5,30,5a),
	HX_("size",c1,a0,53,4c),
	HX_("beginGradientFill",5c,3c,03,2e),
	HX_("beginFill",4c,ad,95,8c),
	HX_("endFill",fe,87,e0,25),
	HX_("lineStyle",9d,a8,18,cb),
	HX_("endLineStyle",42,b1,1a,da),
	HX_("moveTo",ec,d2,ac,cc),
	HX_("lineTo",8f,46,a0,ec),
	HX_("curveTo",0a,60,88,ce),
	HX_("renderText",23,c7,03,ea),
	HX_("eof",bc,04,4d,00),
	::String(null()) };

::hx::Class Gfx_obj::__mClass;

void Gfx_obj::__register()
{
	Gfx_obj _hx_dummy;
	Gfx_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("format.gfx.Gfx",ad,db,60,68);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Gfx_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Gfx_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Gfx_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Gfx_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace format
} // end namespace gfx
