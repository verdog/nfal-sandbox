// Generated by Haxe 4.1.5
#ifndef INCLUDED_format_gfx_LineStyle
#define INCLUDED_format_gfx_LineStyle

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_3d74439f11cb390c_19_new)
HX_DECLARE_CLASS2(format,gfx,LineStyle)

namespace format{
namespace gfx{


class HXCPP_CLASS_ATTRIBUTES LineStyle_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef LineStyle_obj OBJ_;
		LineStyle_obj();

	public:
		enum { _hx_ClassId = 0x68a26bff };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="format.gfx.LineStyle")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"format.gfx.LineStyle"); }

		inline static ::hx::ObjectPtr< LineStyle_obj > __new() {
			::hx::ObjectPtr< LineStyle_obj > __this = new LineStyle_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< LineStyle_obj > __alloc(::hx::Ctx *_hx_ctx) {
			LineStyle_obj *__this = (LineStyle_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LineStyle_obj), true, "format.gfx.LineStyle"));
			*(void **)__this = LineStyle_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_3d74439f11cb390c_19_new)
HXLINE(  20)		( ( ::format::gfx::LineStyle)(__this) )->thickness = ((Float)1.0);
HXLINE(  21)		( ( ::format::gfx::LineStyle)(__this) )->color = 0;
HXLINE(  22)		( ( ::format::gfx::LineStyle)(__this) )->alpha = ((Float)1.0);
HXLINE(  23)		( ( ::format::gfx::LineStyle)(__this) )->pixelHinting = false;
HXLINE(  24)		( ( ::format::gfx::LineStyle)(__this) )->scaleMode = 2;
HXLINE(  25)		( ( ::format::gfx::LineStyle)(__this) )->capsStyle = 1;
HXLINE(  26)		( ( ::format::gfx::LineStyle)(__this) )->jointStyle = 2;
HXLINE(  27)		( ( ::format::gfx::LineStyle)(__this) )->miterLimit = ((Float)3.0);
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LineStyle_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LineStyle",7d,88,eb,6c); }

		Float thickness;
		int color;
		Float alpha;
		bool pixelHinting;
		 ::Dynamic scaleMode;
		 ::Dynamic capsStyle;
		 ::Dynamic jointStyle;
		Float miterLimit;
};

} // end namespace format
} // end namespace gfx

#endif /* INCLUDED_format_gfx_LineStyle */ 
