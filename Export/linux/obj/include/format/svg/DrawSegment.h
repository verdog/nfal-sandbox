// Generated by Haxe 4.1.5
#ifndef INCLUDED_format_svg_DrawSegment
#define INCLUDED_format_svg_DrawSegment

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_format_svg_PathSegment
#include <format/svg/PathSegment.h>
#endif
HX_DECLARE_CLASS2(format,gfx,Gfx)
HX_DECLARE_CLASS2(format,svg,DrawSegment)
HX_DECLARE_CLASS2(format,svg,PathSegment)
HX_DECLARE_CLASS2(format,svg,RenderContext)

namespace format{
namespace svg{


class HXCPP_CLASS_ATTRIBUTES DrawSegment_obj : public  ::format::svg::PathSegment_obj
{
	public:
		typedef  ::format::svg::PathSegment_obj super;
		typedef DrawSegment_obj OBJ_;
		DrawSegment_obj();

	public:
		enum { _hx_ClassId = 0x0e9b5426 };

		void __construct(Float inX,Float inY);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="format.svg.DrawSegment")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"format.svg.DrawSegment"); }
		static ::hx::ObjectPtr< DrawSegment_obj > __new(Float inX,Float inY);
		static ::hx::ObjectPtr< DrawSegment_obj > __alloc(::hx::Ctx *_hx_ctx,Float inX,Float inY);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~DrawSegment_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DrawSegment",ef,ab,49,d4); }

		void toGfx( ::format::gfx::Gfx inGfx, ::format::svg::RenderContext ioContext);

		int getType();

};

} // end namespace format
} // end namespace svg

#endif /* INCLUDED_format_svg_DrawSegment */ 
