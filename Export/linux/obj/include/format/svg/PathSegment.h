// Generated by Haxe 4.1.5
#ifndef INCLUDED_format_svg_PathSegment
#define INCLUDED_format_svg_PathSegment

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(format,gfx,Gfx)
HX_DECLARE_CLASS2(format,svg,PathSegment)
HX_DECLARE_CLASS2(format,svg,RenderContext)

namespace format{
namespace svg{


class HXCPP_CLASS_ATTRIBUTES PathSegment_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef PathSegment_obj OBJ_;
		PathSegment_obj();

	public:
		enum { _hx_ClassId = 0x77129341 };

		void __construct(Float inX,Float inY);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="format.svg.PathSegment")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"format.svg.PathSegment"); }
		static ::hx::ObjectPtr< PathSegment_obj > __new(Float inX,Float inY);
		static ::hx::ObjectPtr< PathSegment_obj > __alloc(::hx::Ctx *_hx_ctx,Float inX,Float inY);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PathSegment_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PathSegment",6e,d8,ba,67); }

		static void __boot();
		static int MOVE;
		static int DRAW;
		static int CURVE;
		static int CUBIC;
		static int ARC;
		Float x;
		Float y;
		virtual int getType();
		::Dynamic getType_dyn();

		Float prevX();
		::Dynamic prevX_dyn();

		Float prevY();
		::Dynamic prevY_dyn();

		virtual Float prevCX();
		::Dynamic prevCX_dyn();

		virtual Float prevCY();
		::Dynamic prevCY_dyn();

		virtual void toGfx( ::format::gfx::Gfx inGfx, ::format::svg::RenderContext ioContext);
		::Dynamic toGfx_dyn();

};

} // end namespace format
} // end namespace svg

#endif /* INCLUDED_format_svg_PathSegment */ 
