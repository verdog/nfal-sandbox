// Generated by Haxe 4.1.5
#ifndef INCLUDED_format_svg_MoveSegment
#define INCLUDED_format_svg_MoveSegment

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_format_svg_PathSegment
#include <format/svg/PathSegment.h>
#endif
HX_DECLARE_CLASS2(format,svg,MoveSegment)
HX_DECLARE_CLASS2(format,svg,PathSegment)

namespace format{
namespace svg{


class HXCPP_CLASS_ATTRIBUTES MoveSegment_obj : public  ::format::svg::PathSegment_obj
{
	public:
		typedef  ::format::svg::PathSegment_obj super;
		typedef MoveSegment_obj OBJ_;
		MoveSegment_obj();

	public:
		enum { _hx_ClassId = 0x72d55b55 };

		void __construct(Float inX,Float inY);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="format.svg.MoveSegment")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"format.svg.MoveSegment"); }
		static ::hx::ObjectPtr< MoveSegment_obj > __new(Float inX,Float inY);
		static ::hx::ObjectPtr< MoveSegment_obj > __alloc(::hx::Ctx *_hx_ctx,Float inX,Float inY);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MoveSegment_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MoveSegment",82,a0,7d,63); }

		int getType();

};

} // end namespace format
} // end namespace svg

#endif /* INCLUDED_format_svg_MoveSegment */ 
