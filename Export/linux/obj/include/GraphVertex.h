// Generated by Haxe 4.1.5
#ifndef INCLUDED_GraphVertex
#define INCLUDED_GraphVertex

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(GraphVertex)



class HXCPP_CLASS_ATTRIBUTES GraphVertex_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GraphVertex_obj OBJ_;
		GraphVertex_obj();

	public:
		enum { _hx_ClassId = 0x062f111a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="GraphVertex")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"GraphVertex"); }
		static ::hx::ObjectPtr< GraphVertex_obj > __new();
		static ::hx::ObjectPtr< GraphVertex_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GraphVertex_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GraphVertex",32,65,f8,0c); }

		static void __boot();
		static int nextId;
		int id;
};


#endif /* INCLUDED_GraphVertex */ 
